
Step_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000001b6  0000024a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010a  0080010a  00000254  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000284  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000002c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000897  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007bf  00000000  00000000  00000b8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002f2  00000000  00000000  0000134a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  0000163c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000401  00000000  00000000  000016b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ac  00000000  00000000  00001ab5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001b61  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	7f c0       	rjmp	.+254    	; 0x138 <__vector_14>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5a c0       	rjmp	.+180    	; 0xf6 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 eb       	ldi	r30, 0xB6	; 182
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	76 c0       	rjmp	.+236    	; 0x1b2 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
SIGNAL(TIMER0_OVF_vect);
SIGNAL(TIMER0_OVF_vect);

int main() 
{
	DDRB = 0x20;
  c8:	80 e2       	ldi	r24, 0x20	; 32
  ca:	87 bb       	out	0x17, r24	; 23
	PORTB &= ~0x20;
  cc:	88 b3       	in	r24, 0x18	; 24
  ce:	8f 7d       	andi	r24, 0xDF	; 223
  d0:	88 bb       	out	0x18, r24	; 24
	DDRD = 0xf0;
  d2:	80 ef       	ldi	r24, 0xF0	; 240
  d4:	81 bb       	out	0x11, r24	; 17
	TCCR0 =0x07;
  d6:	87 e0       	ldi	r24, 0x07	; 7
  d8:	83 bf       	out	0x33, r24	; 51
	TCNT0 =112;
  da:	80 e7       	ldi	r24, 0x70	; 112
  dc:	82 bf       	out	0x32, r24	; 50
	TCCR1A = 0;
  de:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0x04;
  e0:	84 e0       	ldi	r24, 0x04	; 4
  e2:	8e bd       	out	0x2e, r24	; 46
	TCNT1H = 0xfb;
  e4:	8b ef       	ldi	r24, 0xFB	; 251
  e6:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0X0d;
  e8:	8d e0       	ldi	r24, 0x0D	; 13
  ea:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x05;
  ec:	85 e0       	ldi	r24, 0x05	; 5
  ee:	87 bf       	out	0x37, r24	; 55
	TIFR = 0x05;
  f0:	86 bf       	out	0x36, r24	; 54
	sei();
  f2:	78 94       	sei
  f4:	ff cf       	rjmp	.-2      	; 0xf4 <main+0x2c>

000000f6 <__vector_16>:
	
	while(1){}
}
SIGNAL(TIMER0_OVF_vect)
{
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
	cli();
 104:	f8 94       	cli
	TCNT0 =112;
 106:	80 e7       	ldi	r24, 0x70	; 112
 108:	82 bf       	out	0x32, r24	; 50
	timer0Cnt++;
 10a:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <timer0Cnt>
 10e:	8f 5f       	subi	r24, 0xFF	; 255
 110:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <timer0Cnt>
	if (timer0Cnt == 200)
 114:	88 3c       	cpi	r24, 0xC8	; 200
 116:	41 f4       	brne	.+16     	; 0x128 <__vector_16+0x32>
	{
		dir^=1;
 118:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <dir>
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	89 27       	eor	r24, r25
 120:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <dir>
		timer0Cnt = 0;
 124:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <timer0Cnt>
	}
	sei();
 128:	78 94       	sei
}
 12a:	9f 91       	pop	r25
 12c:	8f 91       	pop	r24
 12e:	0f 90       	pop	r0
 130:	0f be       	out	0x3f, r0	; 63
 132:	0f 90       	pop	r0
 134:	1f 90       	pop	r1
 136:	18 95       	reti

00000138 <__vector_14>:
SIGNAL(TIMER1_OVF_vect)
{
 138:	1f 92       	push	r1
 13a:	0f 92       	push	r0
 13c:	0f b6       	in	r0, 0x3f	; 63
 13e:	0f 92       	push	r0
 140:	11 24       	eor	r1, r1
 142:	0b b6       	in	r0, 0x3b	; 59
 144:	0f 92       	push	r0
 146:	8f 93       	push	r24
 148:	9f 93       	push	r25
 14a:	ef 93       	push	r30
 14c:	ff 93       	push	r31
	cli();
 14e:	f8 94       	cli
	TCNT1H = 0xfb;
 150:	8b ef       	ldi	r24, 0xFB	; 251
 152:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0x0d;
 154:	8d e0       	ldi	r24, 0x0D	; 13
 156:	8c bd       	out	0x2c, r24	; 44
	
	PORTD = step[mot_cnt];
 158:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	e0 50       	subi	r30, 0x00	; 0
 160:	ff 4f       	sbci	r31, 0xFF	; 255
 162:	80 81       	ld	r24, Z
 164:	82 bb       	out	0x12, r24	; 18
	if (dir ==DIR_R)
 166:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <dir>
 16a:	81 30       	cpi	r24, 0x01	; 1
 16c:	59 f4       	brne	.+22     	; 0x184 <__vector_14+0x4c>
	{
		if (mot_cnt++==7) mot_cnt = 0;
 16e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	98 0f       	add	r25, r24
 176:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <__data_end>
 17a:	87 30       	cpi	r24, 0x07	; 7
 17c:	71 f4       	brne	.+28     	; 0x19a <__vector_14+0x62>
 17e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
 182:	0b c0       	rjmp	.+22     	; 0x19a <__vector_14+0x62>
	}
	else if(mot_cnt--==0) mot_cnt = 7;
 184:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 188:	9f ef       	ldi	r25, 0xFF	; 255
 18a:	98 0f       	add	r25, r24
 18c:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <__data_end>
 190:	81 11       	cpse	r24, r1
 192:	03 c0       	rjmp	.+6      	; 0x19a <__vector_14+0x62>
 194:	87 e0       	ldi	r24, 0x07	; 7
 196:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
	sei();
 19a:	78 94       	sei
 19c:	ff 91       	pop	r31
 19e:	ef 91       	pop	r30
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	0f 90       	pop	r0
 1a6:	0b be       	out	0x3b, r0	; 59
 1a8:	0f 90       	pop	r0
 1aa:	0f be       	out	0x3f, r0	; 63
 1ac:	0f 90       	pop	r0
 1ae:	1f 90       	pop	r1
 1b0:	18 95       	reti

000001b2 <_exit>:
 1b2:	f8 94       	cli

000001b4 <__stop_program>:
 1b4:	ff cf       	rjmp	.-2      	; 0x1b4 <__stop_program>
